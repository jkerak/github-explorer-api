swagger: '2.0'
produces:
  - application/json
consumes:
  - application/json

paths:

  /userCollections/{id}:
    get:
      description: |
        gets user collection of repositories by id
      parameters:
        - name: id
          in: path
          description: UserCollectionID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/userCollectionDto'
    put:
      description: |
        update user collection record.
      parameters:
        - name: id
          in: path
          description: UserCollectionID
          required: true
          type: integer
          format: int64
        - name: userCollectionDto
          in: body
          required: true
          schema:
            $ref: '#/definitions/userCollectionDto'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/userCollectionDto'

  /userCollections/{id}/ignore:
    post:
      description: |
        ignore repository for collection
      operationId: ignoreRepository
      parameters:
        - name: id
          in: path
          description: UserCollectionID
          required: true
          type: integer
          format: int64
        - name: repositoryId
          in: query
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK

  /userCollections/{id}/save:
    post:
      description: |
        Add repository to collection
      operationId: saveRepository
      parameters:
        - name: id
          in: path
          description: UserCollectionID
          required: true
          type: integer
          format: int64
        - name: repositoryId
          in: query
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK

  /userCollections:
    post:
      description: |
        Create new repository
      operationId: createUserCollection
      parameters:
        - name: title
          in: query
          required: true
          type: string


definitions:

  userCollectionDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      created:
        type: string
      modified:
        type: string
      savedRepos:
        type: array
        items:
          type: string
      ignoredRepos:
        type: array
        items:
          type: string
      minimumStars:
        type: integer
        format: int32
      minimumSize:
        type: integer
        format: int32
      language:
        type: string
